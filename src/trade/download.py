import polars as pl
from dbnomics import fetch_series
import streamlit as st 
import plotly.graph_objects as go
# liste de tous les ISO3
list_iso3 = [
    "AFG",
    "ALB",
    "DZA",
    "AND",
    "AGO",
    "ATG",
    "ARG",
    "ARM",
    "AUS",
    "AUT",
    "AZE",
    "BHS",
    "BHR",
    "BGD",
    "BRB",
    "BLR",
    "BEL",
    "BLZ",
    "BEN",
    "BTN",
    "BOL",
    "BIH",
    "BWA",
    "BRA",
    "BRN",
    "BGR",
    "BFA",
    "BDI",
    "CPV",
    "KHM",
    "CMR",
    "CAN",
    "CAF",
    "TCD",
    "CHL",
    "CHN",
    "COL",
    "COM",
    "COG",
    "COD",
    "CRI",
    "CIV",
    "HRV",
    "CUB",
    "CYP",
    "CZE",
    "DNK",
    "DJI",
    "DMA",
    "DOM",
    "ECU",
    "EGY",
    "SLV",
    "GNQ",
    "ERI",
    "EST",
    "SWZ",
    "ETH",
    "FJI",
    "FIN",
    "FRA",
    "GAB",
    "GMB",
    "GEO",
    "DEU",
    "GHA",
    "GRC",
    "GRD",
    "GTM",
    "GIN",
    "GNB",
    "GUY",
    "HTI",
    "HND",
    "HUN",
    "ISL",
    "IND",
    "IDN",
    "IRN",
    "IRQ",
    "IRL",
    "ISR",
    "ITA",
    "JAM",
    "JPN",
    "JOR",
    "KAZ",
    "KEN",
    "KIR",
    "KWT",
    "KGZ",
    "LAO",
    "LVA",
    "LBN",
    "LSO",
    "LBR",
    "LBY",
    "LIE",
    "LTU",
    "LUX",
    "MDG",
    "MWI",
    "MYS",
    "MDV",
    "MLI",
    "MLT",
    "MHL",
    "MRT",
    "MUS",
    "MEX",
    "FSM",
    "MDA",
    "MCO",
    "MNG",
    "MNE",
    "MAR",
    "MOZ",
    "MMR",
    "NAM",
    "NRU",
    "NPL",
    "NLD",
    "NZL",
    "NIC",
    "NER",
    "NGA",
    "PRK",
    "MKD",
    "NOR",
    "OMN",
    "PAK",
    "PLW",
    "PAN",
    "PNG",
    "PRY",
    "PER",
    "PHL",
    "POL",
    "PRT",
    "QAT",
    "ROU",
    "RUS",
    "RWA",
    "KNA",
    "LCA",
    "VCT",
    "WSM",
    "SMR",
    "STP",
    "SAU",
    "SEN",
    "SRB",
    "SYC",
    "SLE",
    "SGP",
    "SVK",
    "SVN",
    "SLB",
    "SOM",
    "ZAF",
    "KOR",
    "SSD",
    "ESP",
    "LKA",
    "SDN",
    "SUR",
    "SWE",
    "CHE",
    "SYR",
    "TJK",
    "TZA",
    "THA",
    "TLS",
    "TGO",
    "TON",
    "TTO",
    "TUN",
    "TUR",
    "TKM",
    "TUV",
    "UGA",
    "UKR",
    "ARE",
    "GBR",
    "USA",
    "URY",
    "UZB",
    "VUT",
    "VAT",
    "VEN",
    "VNM",
    "YEM",
    "ZMB",
    "ZWE",
]

# Annual Trade in % of GDP
df_trade = fetch_series(
    "WB",
    "WDI",
    dimensions={
        "frequency": ["A"],
        "indicator": ["NE.TRD.GNFS.ZS"],
        "country": list_iso3,
    },
    max_nb_series=200,
)
#
df_trade_pd = fetch_series(
    "WB",
    "WDI",
    dimensions={
        "frequency": ["A"],
        "indicator": ["NE.TRD.GNFS.ZS"],
        "country": list_iso3,
    },
    max_nb_series=200,
)
#
df_trade_bop = fetch_series(
    "WB",
    "WDI",
    dimensions={
        "frequence": ["A"],
        "indicator": ["BN.GSR.MRCH.CD"],
        "country": list_iso3,
    },
    max_nb_series=200,
)

df_trade = df_trade.dropna()
df_trade = pl.from_pandas(df_trade)

df_trade_bop = df_trade_bop.dropna()
df_trade_bop = pl.from_pandas(df_trade_bop)

df_trade_pd = df_trade_pd.dropna()
# voir la carte pour chaque annee 

df_trade_22 = df_trade.filter(pl.col("original_period") == "2022")
#pour 2024"
fig1  = go.Figure(
    data=go.Choropleth(
        locations=df_trade_22["country"],
        z=df_trade_22["original_value"],
        colorscale="Blues",
        reversescale=False,
        autocolorscale=False,
        marker_line_color="white",
        zmin = 0,
        zmax=150
    )
)

fig1.update_layout(
    title_text="Part des Ã©changes en pourcentage du PIB pour 2022",
    geo=dict(showframe=False, showcoastlines=False, projection_type="equirectangular"),
)

st.plotly_chart(fig1, height = 900)








